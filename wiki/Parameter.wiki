#sidebar Menu
#summary BagaOSD parameter description
----
= Modification for Arduino code =

== Compilation ==

Use arduino IDE (http://arduino.cc/en/main/software) to compile and upload your code to Arduino and MiniMOSD. You'll find a lot of tutorial about it on the internet.

----
== Config file == 

Modify file *config.h* according to your needs 
----
=== RSSI Choice (PWM or Analog) ===
==== PWM Rssi ====
Set it to ENABLED if you are using a PWM RSSI source (numerical). 

If you're using an analog source or you don't use any RSSI information, you can comment this part (put // in front of *#define RSSI_USE_PWM*)

{{{
#define RSSI_USE_PWM               ENABLED
}}}

Set the numerical PIN number (default 12) if you are using PWM RSSI source (numerical). Only used if *RSSI_USE_PWM* is ENABLED
{{{
#define RSSI_PIN_PWM               12
}}}


Internal buffer to smooth PWM RSSI signal. Only used if *RSSI_USE_PWM* is ENABLED

{{{
#define RSSI_RC_FILTER             8000    //RSSI constant to analyse PWM RSSI signal 
#define RSSI_RSSI_MAX              135      //RSSI Max signal value
#define RSSI_SCALE_MIN             3.5       //Min value for Sigmoid function
#define RSSI_SCALE_MAX             -2      //Max value for Sigmoid function
}}}

==== Analog Rssi ====
Set the analog PIN (default A2) you want to use to read RSSI analog source. This part is ignored if *RSSI_USE_PWM* is *ENABLED*. If you don't need to display RSSI, assign -1 value (*#define RSSI_PIN_ANALOG -1*)

{{{
#define RSSI_PIN_ANALOG            A2
}}}


----
=== Radio receiver information ===

==== PPM / Standard ====
Set it to ENABLED if your receiver output PPM (get all the channels information through one port only), this can be commented to use standard RX configuration instead of PPM Sum configuration.

{{{
#define RC_PPM_MODE                ENABLED 
}}}

Set the channel order if you're using a PPM receiver and *RC_PPM_MODE* is *ENABLED*. 

Only 2 channels are used : *THROTTLE_PPM* (for flight time and throttle percent) and *FMODE_PPM* (for flight mode)

{{{
#define SERIAL_SUM_PPM             ROLL_PPM,PITCH_PPM,THROTTLE_PPM,YAW_PPM,X1_PPM,X2_PPM,FMODE_PPM,...
}}}


----
=== Global sensor config ===

Used to have a better read accuracy for analog source. 

Internal Arduino voltage can vary, so to get the same measured value, we should compare to a fixed reference. This can be commented to be disabled.

{{{
#define INTERNAL_VOLTAGE_REF       5160
}}}



----
=== Voltage sensor config ===
Voltage sensor pin

{{{
#define VOLTAGE_PIN                A0
}}}

Rise this value to lower voltage displayed value 

{{{
#define VOLTAGE_FACTOR             12.21
}}}

Internal buffer to smooth voltage value

{{{
#define VOLTAGE_BUFFER             128
}}}



----
=== Current sensor config ===
Current sensor pin

{{{
#define CURRENT_PIN                A3
}}}

Rise this value to lower current output value 

{{{
#define CURRENT_FACTOR             2.46
}}}
 
Internal buffer to smooth current value

{{{
#define CURRENT_BUFFER             128
}}}



----
=== Battery config ===
Commented to use a current sensor, current sensor is not used if uncommented.
{{{
//#define ESTIMATE_BATTERY_REMAINING  ENABLED 
}}}

Number of cell, for estimate capacity (*ESTIMATE_BATTERY_REMAINING*)

{{{
#define LIPO_CELL                  4 
}}}

LIPO capacity in mah to dispaly remaining percent of battery (when a current sensor is used and *ESTIMATE_BATTERY_REMAINING* is disabled)

{{{
#define LIPO_CAPACITY_MAH          8000
}}}

----
=== GPS Handler ===
Choose what method to use to get Naza GPS data, TRUE for [NazaConnector Naza decoding], FALSE for uBlow [uBloxSolder raw decoding]
{{{
#define DECODE_NAZA_GPS            TRUE  
//TRUE : Decode Naza GPS Protocol (connector choice)
//FALSE : Decode RAW uBlox Message (solder choice)
}}}


----
=== Throttle limit ===
Those parameters are used to compute throttle percent. Put the min. and max. signal (leave default values if you don't know)
{{{
#define THROTTLE_PWM_MIN           1000
#define THROTTLE_PWM_MAX           2000
}}}




